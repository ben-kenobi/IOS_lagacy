客户端： 移动端、PC端

数据库： 数据是存储在数据库中！

服务器： 本质上是一台计算机！服务器一般用于跟客户端和数据库交互！

请求： 客户端向服务器索要数据！

响应： 服务器响应客户端的请求，返回给客户端数据！（最难的）业务逻辑 个人需要将 数据和 UI 结合！

请求：如何向服务器发送请求？ NSUrlConnection   NSUrlSession  第三方：AFN  ASI（已经不用了）


服务器：数据都是从服务器返回的！

测试服务器： 开发人员在测试阶段所需要的服务器！
线上服务器： APP 上线之后访问的服务器！



七层协议/网络协议:

两台计算机如何连接在一起? 网线/无线电波/光缆/电缆
网络中传递的数据,只能是 0 和 1.

物理层: 1.利用物理设备将计算机连接在一起! 规定连接设备的接口类型/传输速率/功耗...
2.负责传递数据! 物理设备只能传递电信号(高(1)低(0)电平)

010100101011101111000101010010

单纯的 0 和 1 是没有意义的!
数据链路层: 将 0 和 1 分组,并且规定解读方式! 解码:ASCII 规定了 数据包 的概念!
01010010  10111011  11000101  01001000

以太网协议: 一帧就是一个数据包!  以太网数据包:1518个字节(标头:18个字节;数据:1500个字节)

如何找到网络中唯一的一台计算机?

网络层: 为了确定网络中唯一的一台计算机!

引入了一套新的地址机制: 网络地址/IP地址!

IP地址:计算机的网络地址!每一台计算机都有独一无二的 IP 地址!
物理寻址设备: 路由器/交换机  根据 IP 地址寻找网络中的计算机!

子网掩码:表明计算机所在的子网络! 子网掩码分为两个部分: 网络部分 + 主机部分!

路由器:当前网关的所在地址!

DNS服务器: 域名解析器: 域名:IP地址的一个速记符号!

每一台计算机都有自己的域名和 IP 地址: 域名: localhost  IP: 127.0.0.1 记住! 192.168.19.95

网络层的实质: 建立 "主机" 到 "主机" 之间的通信!



QQ /微信 /陌陌 ,计算机接收到一条聊天信息:这条聊天信息是发送给哪一个应用程序的?

网卡: 每一块网卡都有一个独一无二的地址: MAC地址!

应用程序只要上网,就需要使用网卡!应用程序通过网卡来接收和发送信息!

传输层: 给每一个使用网卡的应用程序一个编号  --- 端口号! 网络中传递的信息通过附加端口号,来确定这条信息是发送给哪一个应用程序的!

QQ: 5000
微信: 4000
陌陌: 3000

传输层: 建立 "应用程序" 到 "应用程序" 之间的通信!  "端口" 到 "端口" 之间的通信!

TCP 协议: 安全协议,三次握手协议! HTTP协议是基于 TCP 协议的!
UDP 协议: 不是一个安全协议! 报文头协议!


会话层: 建立了一套自动收发信息,自动网络寻址的机制!

表示层: 为不同系统解决语法通信问题!

应用层: 规定不同应用程序的语法格式!
{
    // 网络协议:
    超文本传输协议: http 协议  http://
    
    本地文件协议: ftp 协议 file://
    
    邮件协议: mail
}


Socket (套接字/插座) : Socket 不属于网络协议! 是一个 通信模型!

通信模型:  "主机" + "端口" ---- Socket!
Socket 至少包含了  网络层和传输层 . 会话层,表示层,应用层其实都包含在 Socket 中!

TCP/IP  ----- 就是一个 Socket?

//
数据包:


数据链路层: 以太网数据包

标头: 通信双方的  MAC 地址! 18个字节

数据: 需要传递的数据! 最大不超过 1500 个字节


网络层: IP 地址! IP数据包:  4000 字节 (20 + 3980)  拆包(20 + 1480)(20+1480)(20+1020)
                                                                

标头: 双方的  IP 地址 20个字节!

数据: 数据   最大 65535个字节

数据包的嵌套: 为了保证上层数据结构的变化不影响下层的结构,一般将上层的数据包嵌套在下层数据包的数据部分!

将 IP 数据包 嵌套在以太网数据包的数据部分!

如果上一层的数据包大于下一层的数据包的大小,拆包/分包

拆包/分包:将数据拆分之后再打包,并且记录数据包的顺序!

组包:将拆分之后的数据包,按顺序组合起来!


传输层: 主要是将端口号附加到信息中! TCP协议/UDP协议

TCP数据包和UDP数据包的共同点是: 在数据包的标头部分都含有双方的  端口号!

TCP数据包的标头部分比较复杂,还包含安全机制! UDP 数据包的标头部分 : 8个字节

传输层数据包的总大小一般不要超过 65535个字节!保证一个 IP 数据包恰好能放下一个传输层数据包!

应用层: 应用层的数据就是数据包中所需要传递的数据部分的内容!


数据在网络中是以何种方式传递的?

在同一个子网络内:数据以广播的方式传递!

在不同的自网络中:数据以路由的方式传递!























