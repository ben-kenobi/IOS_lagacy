//#pragma mark - 一. UIDynamic
//
//#pragma mark 1. 重力 (掌握)
//UIGravityBehavior
//1. 创建物理仿真器(顺便设置仿真范围)
//2. 创建物理重力仿真行为(顺便设置仿真元素)
//3. 将仿真行为添加到仿真器中
//
//#pragma mark 2. 碰撞 (掌握)
//UICollisionBehavior
//1. 创建物理仿真器(顺便设置仿真范围)
//2. 创建物理碰撞仿真行为(顺便设置仿真元素)
//3. 将仿真行为添加到仿真器中
//
//#pragma mark 3. 捕捉 (掌握)
//UISnapBehavior
//1. 创建物理仿真器(顺便设置仿真范围)
//2. 创建物理捕捉仿真行为(顺便设置仿真元素)
//3. 将仿真行为添加到仿真器中
//
//#pragma mark - 二. 传感器
//
//#pragma mark 1. 传感器介绍 (了解)
//
//
//#pragma mark 2. 距离传感器 (了解)
//1. 打开距离监测属性
//2. 添加通知 --> UIDeviceProximityStateDidChangeNotification
//3. 通知绑定的方法
//
//#pragma mark 3. 运动管理器 (理解)
//运动管理器 包括 加速计 陀螺仪 磁力计
//
//一. 加速计的介绍
//// 监测力在某个轴上的加速度
//// 三轴有正负方向之分. 哪个方向的正负值指向地面, 那么就会打印哪个轴上对应的正负值
//// 如果不发生运动, 值的区间在1~-1之间, 如果用力, 值的绝对值将会超过1
//
//二. 运动管理器-加速计
//push
//// push会频繁的返回数据
//// push是需要设置更新间隔, 然后调用block方法
//1. 创建运动管理器
//2. 判断加速计是否可用
//3. 采样间隔 单位是秒/次
//4. 调用block方法来获取值
//
//pull
//// pull会在用到的时候才会返回数据
//// pull是不需要设置更新间隔, 然后调用没有block方法
//1. 创建运动管理器
//2. 判断加速计是否可用
//3. 调用方法来获取值
//4. 在按钮的方法中, 通过运动管理器的属性来获取值
//
//三. 运动管理器-陀螺仪Gyro 磁力计Magnetometer
//跟加速计流程一模一样
//只需要换单词即可
//
//
//#pragma mark 4. 摇一摇 (掌握)
//iOS中实现摇一摇的方式
//1. 加速计, 通过判断 绝对值是否大于某个数值, 来判断用户是否发生了摇动
//2. 系统已经封装好的方法
//
//#pragma mark 5. 计步器 (理解)
//CMPedometer
//1. 判断是否可用
//2. 创建计步器
//3. 开始计步
//
//#pragma mark - 三. 蓝牙
//
//#pragma mark 1. GameKit (理解)
//
//
//#pragma mark 2. CoreBuletooth (理解)
//1. 创建中央管理者
//2. 扫描周边设备
//3. 当发现到周边外设时的调用方法 --> 记录扫描到的设备, 应该给用户一个列表去选择
//4. 当外设的cell被选中时, 应该去连接设备
//5. 当连接到外围设备时, 会调用的方法
//    5.1 让外设去扫描服务 --> 可以指定服务, 也可以不传. 不传就代表扫描所有服务
//    5.2 设置外设的代理 --> 当开始扫描服务时, 所有的事项处理将交给外设
//6. 外设 当发现到服务的时候, 会调用的方法 --> 需要找到指定的服务, 才可以去扫描特征 --> 根据服务来扫描特征
//7. 外设 当发现到某个服务的特征的时候, 会调用的方法 --> 根据UUID获取指定的特征进行数据交互
//8. 断开连接(比如在视图将要消失时断开, 或者当完成了数据的收发之后, 自动断开)
//
//
